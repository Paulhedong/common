buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenLocal()
		maven { url "http://maven.zz.com/nexus/content/groups/public/" }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

war {
	archiveName = "calabria.war"
}

repositories {
	mavenLocal()
	maven { url "http://maven.zz.com/nexus/content/groups/public/" }
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	//compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.5')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
	runtime('mysql:mysql-connector-java')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	//compile 'com.zaxxer:HikariCP:2.4.1'

}

//mybatis generator plugin ------ start
buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.4"
	}
}

apply plugin: "com.arenagod.gradle.MybatisGenerator"

configurations {
	mybatisGenerator
}

mybatisGenerator {
	verbose = true
	configFile = 'src/main/resources/tools/generatorConfig-turin.xml'
}
//mybatis generator plugin ------ end
