<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.sltstatistic.mapper.firenze.IouRecordBlockchainMapper">
  <resultMap id="BaseResultMap" type="io.sltstatistic.model.firenze.IouRecordBlockchain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tx_contract_address" jdbcType="VARCHAR" property="txContractAddress" />
    <result column="tx_hash" jdbcType="CHAR" property="txHash" />
    <result column="tx_block_num" jdbcType="INTEGER" property="txBlockNum" />
    <result column="tx_from" jdbcType="CHAR" property="txFrom" />
    <result column="tx_data" jdbcType="VARCHAR" property="txData" />
    <result column="tx_contract_method" jdbcType="VARCHAR" property="txContractMethod" />
    <result column="tx_value" jdbcType="VARCHAR" property="txValue" />
    <result column="tx_gas_fee" jdbcType="VARCHAR" property="txGasFee" />
    <result column="tx_status" jdbcType="TINYINT" property="txStatus" />
    <result column="tx_time_stamp" jdbcType="INTEGER" property="txTimeStamp" />
    <result column="iou_id" jdbcType="CHAR" property="iouId" />
    <result column="iou_origin_status" jdbcType="TINYINT" property="iouOriginStatus" />
    <result column="iou_target_status" jdbcType="TINYINT" property="iouTargetStatus" />
    <result column="iou_appeal_status" jdbcType="TINYINT" property="iouAppealStatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="last_tx_hash" jdbcType="CHAR" property="lastTxHash" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, tx_contract_address, tx_hash, tx_block_num, tx_from, tx_data, tx_contract_method, 
    tx_value, tx_gas_fee, tx_status, tx_time_stamp, iou_id, iou_origin_status, iou_target_status, 
    iou_appeal_status, remark, last_tx_hash, ctime, utime
  </sql>
  <select id="selectByExample" parameterType="io.sltstatistic.model.firenze.IouRecordBlockchainExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from iou_record_blockchain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from iou_record_blockchain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from iou_record_blockchain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="io.sltstatistic.model.firenze.IouRecordBlockchainExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from iou_record_blockchain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.sltstatistic.model.firenze.IouRecordBlockchain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into iou_record_blockchain (id, tx_contract_address, tx_hash, 
      tx_block_num, tx_from, tx_data, 
      tx_contract_method, tx_value, tx_gas_fee, 
      tx_status, tx_time_stamp, iou_id, 
      iou_origin_status, iou_target_status, iou_appeal_status, 
      remark, last_tx_hash, ctime, 
      utime)
    values (#{id,jdbcType=INTEGER}, #{txContractAddress,jdbcType=VARCHAR}, #{txHash,jdbcType=CHAR}, 
      #{txBlockNum,jdbcType=INTEGER}, #{txFrom,jdbcType=CHAR}, #{txData,jdbcType=VARCHAR}, 
      #{txContractMethod,jdbcType=VARCHAR}, #{txValue,jdbcType=VARCHAR}, #{txGasFee,jdbcType=VARCHAR}, 
      #{txStatus,jdbcType=TINYINT}, #{txTimeStamp,jdbcType=INTEGER}, #{iouId,jdbcType=CHAR}, 
      #{iouOriginStatus,jdbcType=TINYINT}, #{iouTargetStatus,jdbcType=TINYINT}, #{iouAppealStatus,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR}, #{lastTxHash,jdbcType=CHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{utime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.sltstatistic.model.firenze.IouRecordBlockchain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into iou_record_blockchain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="txContractAddress != null">
        tx_contract_address,
      </if>
      <if test="txHash != null">
        tx_hash,
      </if>
      <if test="txBlockNum != null">
        tx_block_num,
      </if>
      <if test="txFrom != null">
        tx_from,
      </if>
      <if test="txData != null">
        tx_data,
      </if>
      <if test="txContractMethod != null">
        tx_contract_method,
      </if>
      <if test="txValue != null">
        tx_value,
      </if>
      <if test="txGasFee != null">
        tx_gas_fee,
      </if>
      <if test="txStatus != null">
        tx_status,
      </if>
      <if test="txTimeStamp != null">
        tx_time_stamp,
      </if>
      <if test="iouId != null">
        iou_id,
      </if>
      <if test="iouOriginStatus != null">
        iou_origin_status,
      </if>
      <if test="iouTargetStatus != null">
        iou_target_status,
      </if>
      <if test="iouAppealStatus != null">
        iou_appeal_status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="lastTxHash != null">
        last_tx_hash,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="txContractAddress != null">
        #{txContractAddress,jdbcType=VARCHAR},
      </if>
      <if test="txHash != null">
        #{txHash,jdbcType=CHAR},
      </if>
      <if test="txBlockNum != null">
        #{txBlockNum,jdbcType=INTEGER},
      </if>
      <if test="txFrom != null">
        #{txFrom,jdbcType=CHAR},
      </if>
      <if test="txData != null">
        #{txData,jdbcType=VARCHAR},
      </if>
      <if test="txContractMethod != null">
        #{txContractMethod,jdbcType=VARCHAR},
      </if>
      <if test="txValue != null">
        #{txValue,jdbcType=VARCHAR},
      </if>
      <if test="txGasFee != null">
        #{txGasFee,jdbcType=VARCHAR},
      </if>
      <if test="txStatus != null">
        #{txStatus,jdbcType=TINYINT},
      </if>
      <if test="txTimeStamp != null">
        #{txTimeStamp,jdbcType=INTEGER},
      </if>
      <if test="iouId != null">
        #{iouId,jdbcType=CHAR},
      </if>
      <if test="iouOriginStatus != null">
        #{iouOriginStatus,jdbcType=TINYINT},
      </if>
      <if test="iouTargetStatus != null">
        #{iouTargetStatus,jdbcType=TINYINT},
      </if>
      <if test="iouAppealStatus != null">
        #{iouAppealStatus,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="lastTxHash != null">
        #{lastTxHash,jdbcType=CHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.sltstatistic.model.firenze.IouRecordBlockchainExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from iou_record_blockchain
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou_record_blockchain
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.txContractAddress != null">
        tx_contract_address = #{record.txContractAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.txHash != null">
        tx_hash = #{record.txHash,jdbcType=CHAR},
      </if>
      <if test="record.txBlockNum != null">
        tx_block_num = #{record.txBlockNum,jdbcType=INTEGER},
      </if>
      <if test="record.txFrom != null">
        tx_from = #{record.txFrom,jdbcType=CHAR},
      </if>
      <if test="record.txData != null">
        tx_data = #{record.txData,jdbcType=VARCHAR},
      </if>
      <if test="record.txContractMethod != null">
        tx_contract_method = #{record.txContractMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.txValue != null">
        tx_value = #{record.txValue,jdbcType=VARCHAR},
      </if>
      <if test="record.txGasFee != null">
        tx_gas_fee = #{record.txGasFee,jdbcType=VARCHAR},
      </if>
      <if test="record.txStatus != null">
        tx_status = #{record.txStatus,jdbcType=TINYINT},
      </if>
      <if test="record.txTimeStamp != null">
        tx_time_stamp = #{record.txTimeStamp,jdbcType=INTEGER},
      </if>
      <if test="record.iouId != null">
        iou_id = #{record.iouId,jdbcType=CHAR},
      </if>
      <if test="record.iouOriginStatus != null">
        iou_origin_status = #{record.iouOriginStatus,jdbcType=TINYINT},
      </if>
      <if test="record.iouTargetStatus != null">
        iou_target_status = #{record.iouTargetStatus,jdbcType=TINYINT},
      </if>
      <if test="record.iouAppealStatus != null">
        iou_appeal_status = #{record.iouAppealStatus,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.lastTxHash != null">
        last_tx_hash = #{record.lastTxHash,jdbcType=CHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou_record_blockchain
    set id = #{record.id,jdbcType=INTEGER},
      tx_contract_address = #{record.txContractAddress,jdbcType=VARCHAR},
      tx_hash = #{record.txHash,jdbcType=CHAR},
      tx_block_num = #{record.txBlockNum,jdbcType=INTEGER},
      tx_from = #{record.txFrom,jdbcType=CHAR},
      tx_data = #{record.txData,jdbcType=VARCHAR},
      tx_contract_method = #{record.txContractMethod,jdbcType=VARCHAR},
      tx_value = #{record.txValue,jdbcType=VARCHAR},
      tx_gas_fee = #{record.txGasFee,jdbcType=VARCHAR},
      tx_status = #{record.txStatus,jdbcType=TINYINT},
      tx_time_stamp = #{record.txTimeStamp,jdbcType=INTEGER},
      iou_id = #{record.iouId,jdbcType=CHAR},
      iou_origin_status = #{record.iouOriginStatus,jdbcType=TINYINT},
      iou_target_status = #{record.iouTargetStatus,jdbcType=TINYINT},
      iou_appeal_status = #{record.iouAppealStatus,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      last_tx_hash = #{record.lastTxHash,jdbcType=CHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.sltstatistic.model.firenze.IouRecordBlockchain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou_record_blockchain
    <set>
      <if test="txContractAddress != null">
        tx_contract_address = #{txContractAddress,jdbcType=VARCHAR},
      </if>
      <if test="txHash != null">
        tx_hash = #{txHash,jdbcType=CHAR},
      </if>
      <if test="txBlockNum != null">
        tx_block_num = #{txBlockNum,jdbcType=INTEGER},
      </if>
      <if test="txFrom != null">
        tx_from = #{txFrom,jdbcType=CHAR},
      </if>
      <if test="txData != null">
        tx_data = #{txData,jdbcType=VARCHAR},
      </if>
      <if test="txContractMethod != null">
        tx_contract_method = #{txContractMethod,jdbcType=VARCHAR},
      </if>
      <if test="txValue != null">
        tx_value = #{txValue,jdbcType=VARCHAR},
      </if>
      <if test="txGasFee != null">
        tx_gas_fee = #{txGasFee,jdbcType=VARCHAR},
      </if>
      <if test="txStatus != null">
        tx_status = #{txStatus,jdbcType=TINYINT},
      </if>
      <if test="txTimeStamp != null">
        tx_time_stamp = #{txTimeStamp,jdbcType=INTEGER},
      </if>
      <if test="iouId != null">
        iou_id = #{iouId,jdbcType=CHAR},
      </if>
      <if test="iouOriginStatus != null">
        iou_origin_status = #{iouOriginStatus,jdbcType=TINYINT},
      </if>
      <if test="iouTargetStatus != null">
        iou_target_status = #{iouTargetStatus,jdbcType=TINYINT},
      </if>
      <if test="iouAppealStatus != null">
        iou_appeal_status = #{iouAppealStatus,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="lastTxHash != null">
        last_tx_hash = #{lastTxHash,jdbcType=CHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.sltstatistic.model.firenze.IouRecordBlockchain">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou_record_blockchain
    set tx_contract_address = #{txContractAddress,jdbcType=VARCHAR},
      tx_hash = #{txHash,jdbcType=CHAR},
      tx_block_num = #{txBlockNum,jdbcType=INTEGER},
      tx_from = #{txFrom,jdbcType=CHAR},
      tx_data = #{txData,jdbcType=VARCHAR},
      tx_contract_method = #{txContractMethod,jdbcType=VARCHAR},
      tx_value = #{txValue,jdbcType=VARCHAR},
      tx_gas_fee = #{txGasFee,jdbcType=VARCHAR},
      tx_status = #{txStatus,jdbcType=TINYINT},
      tx_time_stamp = #{txTimeStamp,jdbcType=INTEGER},
      iou_id = #{iouId,jdbcType=CHAR},
      iou_origin_status = #{iouOriginStatus,jdbcType=TINYINT},
      iou_target_status = #{iouTargetStatus,jdbcType=TINYINT},
      iou_appeal_status = #{iouAppealStatus,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      last_tx_hash = #{lastTxHash,jdbcType=CHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>