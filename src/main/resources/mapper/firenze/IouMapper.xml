<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.sltstatistic.mapper.firenze.IouMapper">
  <resultMap id="BaseResultMap" type="io.sltstatistic.model.firenze.Iou">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="iou_id" jdbcType="CHAR" property="iouId" />
    <result column="currency" jdbcType="CHAR" property="currency" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="raise_closing_date" jdbcType="TIMESTAMP" property="raiseClosingDate" />
    <result column="promise_repay_date" jdbcType="TIMESTAMP" property="promiseRepayDate" />
    <result column="promise_repay_term" jdbcType="INTEGER" property="promiseRepayTerm" />
    <result column="promise_repay_interest" jdbcType="DECIMAL" property="promiseRepayInterest" />
    <result column="release_address" jdbcType="VARCHAR" property="releaseAddress" />
    <result column="loan_usage" jdbcType="VARCHAR" property="loanUsage" />
    <result column="payment_type" jdbcType="TINYINT" property="paymentType" />
    <result column="repayment_type" jdbcType="TINYINT" property="repaymentType" />
    <result column="loan_rate" jdbcType="DECIMAL" property="loanRate" />
    <result column="borrower_id" jdbcType="CHAR" property="borrowerId" />
    <result column="lender_id" jdbcType="CHAR" property="lenderId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="actual_payment_way" jdbcType="TINYINT" property="actualPaymentWay" />
    <result column="actual_repayment_way" jdbcType="TINYINT" property="actualRepaymentWay" />
    <result column="prefer_payment_way" jdbcType="TINYINT" property="preferPaymentWay" />
    <result column="prefer_payment_account" jdbcType="VARCHAR" property="preferPaymentAccount" />
    <result column="prefer_payment_remark" jdbcType="VARCHAR" property="preferPaymentRemark" />
    <result column="assign_user" jdbcType="TINYINT" property="assignUser" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="overdue_status" jdbcType="TINYINT" property="overdueStatus" />
    <result column="appeal_status" jdbcType="TINYINT" property="appealStatus" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_confirm_time" jdbcType="TIMESTAMP" property="payConfirmTime" />
    <result column="repay_time" jdbcType="TIMESTAMP" property="repayTime" />
    <result column="repay_confirm_time" jdbcType="TIMESTAMP" property="repayConfirmTime" />
    <result column="payment_contract" jdbcType="VARCHAR" property="paymentContract" />
    <result column="repayment_receipt" jdbcType="VARCHAR" property="repaymentReceipt" />
    <result column="tx_pay_hash" jdbcType="VARCHAR" property="txPayHash" />
    <result column="tx_pay_block_num" jdbcType="INTEGER" property="txPayBlockNum" />
    <result column="tx_repay_hash" jdbcType="VARCHAR" property="txRepayHash" />
    <result column="tx_repay_block_num" jdbcType="INTEGER" property="txRepayBlockNum" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, iou_id, currency, amount, raise_closing_date, promise_repay_date, promise_repay_term, 
    promise_repay_interest, release_address, loan_usage, payment_type, repayment_type, 
    loan_rate, borrower_id, lender_id, remark, actual_payment_way, actual_repayment_way, 
    prefer_payment_way, prefer_payment_account, prefer_payment_remark, assign_user, status, 
    type, overdue_status, appeal_status, pay_time, pay_confirm_time, repay_time, repay_confirm_time, 
    payment_contract, repayment_receipt, tx_pay_hash, tx_pay_block_num, tx_repay_hash, 
    tx_repay_block_num, ctime, utime
  </sql>
  <select id="selectByExample" parameterType="io.sltstatistic.model.firenze.IouExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from iou
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from iou
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from iou
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="io.sltstatistic.model.firenze.IouExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from iou
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.sltstatistic.model.firenze.Iou">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into iou (id, iou_id, currency, 
      amount, raise_closing_date, promise_repay_date, 
      promise_repay_term, promise_repay_interest, 
      release_address, loan_usage, payment_type, 
      repayment_type, loan_rate, borrower_id, 
      lender_id, remark, actual_payment_way, 
      actual_repayment_way, prefer_payment_way, prefer_payment_account, 
      prefer_payment_remark, assign_user, status, 
      type, overdue_status, appeal_status, 
      pay_time, pay_confirm_time, repay_time, 
      repay_confirm_time, payment_contract, repayment_receipt, 
      tx_pay_hash, tx_pay_block_num, tx_repay_hash, 
      tx_repay_block_num, ctime, utime
      )
    values (#{id,jdbcType=INTEGER}, #{iouId,jdbcType=CHAR}, #{currency,jdbcType=CHAR}, 
      #{amount,jdbcType=DECIMAL}, #{raiseClosingDate,jdbcType=TIMESTAMP}, #{promiseRepayDate,jdbcType=TIMESTAMP}, 
      #{promiseRepayTerm,jdbcType=INTEGER}, #{promiseRepayInterest,jdbcType=DECIMAL}, 
      #{releaseAddress,jdbcType=VARCHAR}, #{loanUsage,jdbcType=VARCHAR}, #{paymentType,jdbcType=TINYINT}, 
      #{repaymentType,jdbcType=TINYINT}, #{loanRate,jdbcType=DECIMAL}, #{borrowerId,jdbcType=CHAR}, 
      #{lenderId,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, #{actualPaymentWay,jdbcType=TINYINT}, 
      #{actualRepaymentWay,jdbcType=TINYINT}, #{preferPaymentWay,jdbcType=TINYINT}, #{preferPaymentAccount,jdbcType=VARCHAR}, 
      #{preferPaymentRemark,jdbcType=VARCHAR}, #{assignUser,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{type,jdbcType=TINYINT}, #{overdueStatus,jdbcType=TINYINT}, #{appealStatus,jdbcType=TINYINT}, 
      #{payTime,jdbcType=TIMESTAMP}, #{payConfirmTime,jdbcType=TIMESTAMP}, #{repayTime,jdbcType=TIMESTAMP}, 
      #{repayConfirmTime,jdbcType=TIMESTAMP}, #{paymentContract,jdbcType=VARCHAR}, #{repaymentReceipt,jdbcType=VARCHAR}, 
      #{txPayHash,jdbcType=VARCHAR}, #{txPayBlockNum,jdbcType=INTEGER}, #{txRepayHash,jdbcType=VARCHAR}, 
      #{txRepayBlockNum,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}, #{utime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.sltstatistic.model.firenze.Iou">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into iou
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="iouId != null">
        iou_id,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="raiseClosingDate != null">
        raise_closing_date,
      </if>
      <if test="promiseRepayDate != null">
        promise_repay_date,
      </if>
      <if test="promiseRepayTerm != null">
        promise_repay_term,
      </if>
      <if test="promiseRepayInterest != null">
        promise_repay_interest,
      </if>
      <if test="releaseAddress != null">
        release_address,
      </if>
      <if test="loanUsage != null">
        loan_usage,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="repaymentType != null">
        repayment_type,
      </if>
      <if test="loanRate != null">
        loan_rate,
      </if>
      <if test="borrowerId != null">
        borrower_id,
      </if>
      <if test="lenderId != null">
        lender_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="actualPaymentWay != null">
        actual_payment_way,
      </if>
      <if test="actualRepaymentWay != null">
        actual_repayment_way,
      </if>
      <if test="preferPaymentWay != null">
        prefer_payment_way,
      </if>
      <if test="preferPaymentAccount != null">
        prefer_payment_account,
      </if>
      <if test="preferPaymentRemark != null">
        prefer_payment_remark,
      </if>
      <if test="assignUser != null">
        assign_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="overdueStatus != null">
        overdue_status,
      </if>
      <if test="appealStatus != null">
        appeal_status,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payConfirmTime != null">
        pay_confirm_time,
      </if>
      <if test="repayTime != null">
        repay_time,
      </if>
      <if test="repayConfirmTime != null">
        repay_confirm_time,
      </if>
      <if test="paymentContract != null">
        payment_contract,
      </if>
      <if test="repaymentReceipt != null">
        repayment_receipt,
      </if>
      <if test="txPayHash != null">
        tx_pay_hash,
      </if>
      <if test="txPayBlockNum != null">
        tx_pay_block_num,
      </if>
      <if test="txRepayHash != null">
        tx_repay_hash,
      </if>
      <if test="txRepayBlockNum != null">
        tx_repay_block_num,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="iouId != null">
        #{iouId,jdbcType=CHAR},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=CHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="raiseClosingDate != null">
        #{raiseClosingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="promiseRepayDate != null">
        #{promiseRepayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="promiseRepayTerm != null">
        #{promiseRepayTerm,jdbcType=INTEGER},
      </if>
      <if test="promiseRepayInterest != null">
        #{promiseRepayInterest,jdbcType=DECIMAL},
      </if>
      <if test="releaseAddress != null">
        #{releaseAddress,jdbcType=VARCHAR},
      </if>
      <if test="loanUsage != null">
        #{loanUsage,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="repaymentType != null">
        #{repaymentType,jdbcType=TINYINT},
      </if>
      <if test="loanRate != null">
        #{loanRate,jdbcType=DECIMAL},
      </if>
      <if test="borrowerId != null">
        #{borrowerId,jdbcType=CHAR},
      </if>
      <if test="lenderId != null">
        #{lenderId,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="actualPaymentWay != null">
        #{actualPaymentWay,jdbcType=TINYINT},
      </if>
      <if test="actualRepaymentWay != null">
        #{actualRepaymentWay,jdbcType=TINYINT},
      </if>
      <if test="preferPaymentWay != null">
        #{preferPaymentWay,jdbcType=TINYINT},
      </if>
      <if test="preferPaymentAccount != null">
        #{preferPaymentAccount,jdbcType=VARCHAR},
      </if>
      <if test="preferPaymentRemark != null">
        #{preferPaymentRemark,jdbcType=VARCHAR},
      </if>
      <if test="assignUser != null">
        #{assignUser,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="overdueStatus != null">
        #{overdueStatus,jdbcType=TINYINT},
      </if>
      <if test="appealStatus != null">
        #{appealStatus,jdbcType=TINYINT},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payConfirmTime != null">
        #{payConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repayTime != null">
        #{repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repayConfirmTime != null">
        #{repayConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentContract != null">
        #{paymentContract,jdbcType=VARCHAR},
      </if>
      <if test="repaymentReceipt != null">
        #{repaymentReceipt,jdbcType=VARCHAR},
      </if>
      <if test="txPayHash != null">
        #{txPayHash,jdbcType=VARCHAR},
      </if>
      <if test="txPayBlockNum != null">
        #{txPayBlockNum,jdbcType=INTEGER},
      </if>
      <if test="txRepayHash != null">
        #{txRepayHash,jdbcType=VARCHAR},
      </if>
      <if test="txRepayBlockNum != null">
        #{txRepayBlockNum,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.sltstatistic.model.firenze.IouExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from iou
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.iouId != null">
        iou_id = #{record.iouId,jdbcType=CHAR},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=CHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.raiseClosingDate != null">
        raise_closing_date = #{record.raiseClosingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.promiseRepayDate != null">
        promise_repay_date = #{record.promiseRepayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.promiseRepayTerm != null">
        promise_repay_term = #{record.promiseRepayTerm,jdbcType=INTEGER},
      </if>
      <if test="record.promiseRepayInterest != null">
        promise_repay_interest = #{record.promiseRepayInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.releaseAddress != null">
        release_address = #{record.releaseAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.loanUsage != null">
        loan_usage = #{record.loanUsage,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentType != null">
        payment_type = #{record.paymentType,jdbcType=TINYINT},
      </if>
      <if test="record.repaymentType != null">
        repayment_type = #{record.repaymentType,jdbcType=TINYINT},
      </if>
      <if test="record.loanRate != null">
        loan_rate = #{record.loanRate,jdbcType=DECIMAL},
      </if>
      <if test="record.borrowerId != null">
        borrower_id = #{record.borrowerId,jdbcType=CHAR},
      </if>
      <if test="record.lenderId != null">
        lender_id = #{record.lenderId,jdbcType=CHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.actualPaymentWay != null">
        actual_payment_way = #{record.actualPaymentWay,jdbcType=TINYINT},
      </if>
      <if test="record.actualRepaymentWay != null">
        actual_repayment_way = #{record.actualRepaymentWay,jdbcType=TINYINT},
      </if>
      <if test="record.preferPaymentWay != null">
        prefer_payment_way = #{record.preferPaymentWay,jdbcType=TINYINT},
      </if>
      <if test="record.preferPaymentAccount != null">
        prefer_payment_account = #{record.preferPaymentAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.preferPaymentRemark != null">
        prefer_payment_remark = #{record.preferPaymentRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.assignUser != null">
        assign_user = #{record.assignUser,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.overdueStatus != null">
        overdue_status = #{record.overdueStatus,jdbcType=TINYINT},
      </if>
      <if test="record.appealStatus != null">
        appeal_status = #{record.appealStatus,jdbcType=TINYINT},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payConfirmTime != null">
        pay_confirm_time = #{record.payConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repayTime != null">
        repay_time = #{record.repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repayConfirmTime != null">
        repay_confirm_time = #{record.repayConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentContract != null">
        payment_contract = #{record.paymentContract,jdbcType=VARCHAR},
      </if>
      <if test="record.repaymentReceipt != null">
        repayment_receipt = #{record.repaymentReceipt,jdbcType=VARCHAR},
      </if>
      <if test="record.txPayHash != null">
        tx_pay_hash = #{record.txPayHash,jdbcType=VARCHAR},
      </if>
      <if test="record.txPayBlockNum != null">
        tx_pay_block_num = #{record.txPayBlockNum,jdbcType=INTEGER},
      </if>
      <if test="record.txRepayHash != null">
        tx_repay_hash = #{record.txRepayHash,jdbcType=VARCHAR},
      </if>
      <if test="record.txRepayBlockNum != null">
        tx_repay_block_num = #{record.txRepayBlockNum,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou
    set id = #{record.id,jdbcType=INTEGER},
      iou_id = #{record.iouId,jdbcType=CHAR},
      currency = #{record.currency,jdbcType=CHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      raise_closing_date = #{record.raiseClosingDate,jdbcType=TIMESTAMP},
      promise_repay_date = #{record.promiseRepayDate,jdbcType=TIMESTAMP},
      promise_repay_term = #{record.promiseRepayTerm,jdbcType=INTEGER},
      promise_repay_interest = #{record.promiseRepayInterest,jdbcType=DECIMAL},
      release_address = #{record.releaseAddress,jdbcType=VARCHAR},
      loan_usage = #{record.loanUsage,jdbcType=VARCHAR},
      payment_type = #{record.paymentType,jdbcType=TINYINT},
      repayment_type = #{record.repaymentType,jdbcType=TINYINT},
      loan_rate = #{record.loanRate,jdbcType=DECIMAL},
      borrower_id = #{record.borrowerId,jdbcType=CHAR},
      lender_id = #{record.lenderId,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      actual_payment_way = #{record.actualPaymentWay,jdbcType=TINYINT},
      actual_repayment_way = #{record.actualRepaymentWay,jdbcType=TINYINT},
      prefer_payment_way = #{record.preferPaymentWay,jdbcType=TINYINT},
      prefer_payment_account = #{record.preferPaymentAccount,jdbcType=VARCHAR},
      prefer_payment_remark = #{record.preferPaymentRemark,jdbcType=VARCHAR},
      assign_user = #{record.assignUser,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      overdue_status = #{record.overdueStatus,jdbcType=TINYINT},
      appeal_status = #{record.appealStatus,jdbcType=TINYINT},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_confirm_time = #{record.payConfirmTime,jdbcType=TIMESTAMP},
      repay_time = #{record.repayTime,jdbcType=TIMESTAMP},
      repay_confirm_time = #{record.repayConfirmTime,jdbcType=TIMESTAMP},
      payment_contract = #{record.paymentContract,jdbcType=VARCHAR},
      repayment_receipt = #{record.repaymentReceipt,jdbcType=VARCHAR},
      tx_pay_hash = #{record.txPayHash,jdbcType=VARCHAR},
      tx_pay_block_num = #{record.txPayBlockNum,jdbcType=INTEGER},
      tx_repay_hash = #{record.txRepayHash,jdbcType=VARCHAR},
      tx_repay_block_num = #{record.txRepayBlockNum,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.sltstatistic.model.firenze.Iou">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou
    <set>
      <if test="iouId != null">
        iou_id = #{iouId,jdbcType=CHAR},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=CHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="raiseClosingDate != null">
        raise_closing_date = #{raiseClosingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="promiseRepayDate != null">
        promise_repay_date = #{promiseRepayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="promiseRepayTerm != null">
        promise_repay_term = #{promiseRepayTerm,jdbcType=INTEGER},
      </if>
      <if test="promiseRepayInterest != null">
        promise_repay_interest = #{promiseRepayInterest,jdbcType=DECIMAL},
      </if>
      <if test="releaseAddress != null">
        release_address = #{releaseAddress,jdbcType=VARCHAR},
      </if>
      <if test="loanUsage != null">
        loan_usage = #{loanUsage,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="repaymentType != null">
        repayment_type = #{repaymentType,jdbcType=TINYINT},
      </if>
      <if test="loanRate != null">
        loan_rate = #{loanRate,jdbcType=DECIMAL},
      </if>
      <if test="borrowerId != null">
        borrower_id = #{borrowerId,jdbcType=CHAR},
      </if>
      <if test="lenderId != null">
        lender_id = #{lenderId,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="actualPaymentWay != null">
        actual_payment_way = #{actualPaymentWay,jdbcType=TINYINT},
      </if>
      <if test="actualRepaymentWay != null">
        actual_repayment_way = #{actualRepaymentWay,jdbcType=TINYINT},
      </if>
      <if test="preferPaymentWay != null">
        prefer_payment_way = #{preferPaymentWay,jdbcType=TINYINT},
      </if>
      <if test="preferPaymentAccount != null">
        prefer_payment_account = #{preferPaymentAccount,jdbcType=VARCHAR},
      </if>
      <if test="preferPaymentRemark != null">
        prefer_payment_remark = #{preferPaymentRemark,jdbcType=VARCHAR},
      </if>
      <if test="assignUser != null">
        assign_user = #{assignUser,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="overdueStatus != null">
        overdue_status = #{overdueStatus,jdbcType=TINYINT},
      </if>
      <if test="appealStatus != null">
        appeal_status = #{appealStatus,jdbcType=TINYINT},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payConfirmTime != null">
        pay_confirm_time = #{payConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repayTime != null">
        repay_time = #{repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repayConfirmTime != null">
        repay_confirm_time = #{repayConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentContract != null">
        payment_contract = #{paymentContract,jdbcType=VARCHAR},
      </if>
      <if test="repaymentReceipt != null">
        repayment_receipt = #{repaymentReceipt,jdbcType=VARCHAR},
      </if>
      <if test="txPayHash != null">
        tx_pay_hash = #{txPayHash,jdbcType=VARCHAR},
      </if>
      <if test="txPayBlockNum != null">
        tx_pay_block_num = #{txPayBlockNum,jdbcType=INTEGER},
      </if>
      <if test="txRepayHash != null">
        tx_repay_hash = #{txRepayHash,jdbcType=VARCHAR},
      </if>
      <if test="txRepayBlockNum != null">
        tx_repay_block_num = #{txRepayBlockNum,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.sltstatistic.model.firenze.Iou">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou
    set iou_id = #{iouId,jdbcType=CHAR},
      currency = #{currency,jdbcType=CHAR},
      amount = #{amount,jdbcType=DECIMAL},
      raise_closing_date = #{raiseClosingDate,jdbcType=TIMESTAMP},
      promise_repay_date = #{promiseRepayDate,jdbcType=TIMESTAMP},
      promise_repay_term = #{promiseRepayTerm,jdbcType=INTEGER},
      promise_repay_interest = #{promiseRepayInterest,jdbcType=DECIMAL},
      release_address = #{releaseAddress,jdbcType=VARCHAR},
      loan_usage = #{loanUsage,jdbcType=VARCHAR},
      payment_type = #{paymentType,jdbcType=TINYINT},
      repayment_type = #{repaymentType,jdbcType=TINYINT},
      loan_rate = #{loanRate,jdbcType=DECIMAL},
      borrower_id = #{borrowerId,jdbcType=CHAR},
      lender_id = #{lenderId,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      actual_payment_way = #{actualPaymentWay,jdbcType=TINYINT},
      actual_repayment_way = #{actualRepaymentWay,jdbcType=TINYINT},
      prefer_payment_way = #{preferPaymentWay,jdbcType=TINYINT},
      prefer_payment_account = #{preferPaymentAccount,jdbcType=VARCHAR},
      prefer_payment_remark = #{preferPaymentRemark,jdbcType=VARCHAR},
      assign_user = #{assignUser,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      overdue_status = #{overdueStatus,jdbcType=TINYINT},
      appeal_status = #{appealStatus,jdbcType=TINYINT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_confirm_time = #{payConfirmTime,jdbcType=TIMESTAMP},
      repay_time = #{repayTime,jdbcType=TIMESTAMP},
      repay_confirm_time = #{repayConfirmTime,jdbcType=TIMESTAMP},
      payment_contract = #{paymentContract,jdbcType=VARCHAR},
      repayment_receipt = #{repaymentReceipt,jdbcType=VARCHAR},
      tx_pay_hash = #{txPayHash,jdbcType=VARCHAR},
      tx_pay_block_num = #{txPayBlockNum,jdbcType=INTEGER},
      tx_repay_hash = #{txRepayHash,jdbcType=VARCHAR},
      tx_repay_block_num = #{txRepayBlockNum,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>