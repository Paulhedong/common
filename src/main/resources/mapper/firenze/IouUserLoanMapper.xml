<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.sltstatistic.mapper.firenze.IouUserLoanMapper">
  <resultMap id="BaseResultMap" type="io.sltstatistic.model.firenze.IouUserLoan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="normal_repay_count" jdbcType="INTEGER" property="normalRepayCount" />
    <result column="total_overdue_count" jdbcType="INTEGER" property="totalOverdueCount" />
    <result column="total_borrow_count" jdbcType="INTEGER" property="totalBorrowCount" />
    <result column="total_lend_count" jdbcType="INTEGER" property="totalLendCount" />
    <result column="overdueing_count" jdbcType="INTEGER" property="overdueingCount" />
    <result column="borrowing_count" jdbcType="INTEGER" property="borrowingCount" />
    <result column="lending_count" jdbcType="INTEGER" property="lendingCount" />
    <result column="total_overdue_amount" jdbcType="DECIMAL" property="totalOverdueAmount" />
    <result column="total_borrow_amount" jdbcType="DECIMAL" property="totalBorrowAmount" />
    <result column="total_lend_amount" jdbcType="DECIMAL" property="totalLendAmount" />
    <result column="overdueing_amount" jdbcType="DECIMAL" property="overdueingAmount" />
    <result column="borrowing_amount" jdbcType="DECIMAL" property="borrowingAmount" />
    <result column="lending_amount" jdbcType="DECIMAL" property="lendingAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, ctime, utime, user_id, normal_repay_count, total_overdue_count, total_borrow_count, 
    total_lend_count, overdueing_count, borrowing_count, lending_count, total_overdue_amount, 
    total_borrow_amount, total_lend_amount, overdueing_amount, borrowing_amount, lending_amount
  </sql>
  <select id="selectByExample" parameterType="io.sltstatistic.model.firenze.IouUserLoanExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from iou_user_loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from iou_user_loan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from iou_user_loan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="io.sltstatistic.model.firenze.IouUserLoanExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from iou_user_loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.sltstatistic.model.firenze.IouUserLoan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into iou_user_loan (id, ctime, utime, 
      user_id, normal_repay_count, total_overdue_count, 
      total_borrow_count, total_lend_count, overdueing_count, 
      borrowing_count, lending_count, total_overdue_amount, 
      total_borrow_amount, total_lend_amount, overdueing_amount, 
      borrowing_amount, lending_amount)
    values (#{id,jdbcType=INTEGER}, #{ctime,jdbcType=TIMESTAMP}, #{utime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=CHAR}, #{normalRepayCount,jdbcType=INTEGER}, #{totalOverdueCount,jdbcType=INTEGER}, 
      #{totalBorrowCount,jdbcType=INTEGER}, #{totalLendCount,jdbcType=INTEGER}, #{overdueingCount,jdbcType=INTEGER}, 
      #{borrowingCount,jdbcType=INTEGER}, #{lendingCount,jdbcType=INTEGER}, #{totalOverdueAmount,jdbcType=DECIMAL}, 
      #{totalBorrowAmount,jdbcType=DECIMAL}, #{totalLendAmount,jdbcType=DECIMAL}, #{overdueingAmount,jdbcType=DECIMAL}, 
      #{borrowingAmount,jdbcType=DECIMAL}, #{lendingAmount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="io.sltstatistic.model.firenze.IouUserLoan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into iou_user_loan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="normalRepayCount != null">
        normal_repay_count,
      </if>
      <if test="totalOverdueCount != null">
        total_overdue_count,
      </if>
      <if test="totalBorrowCount != null">
        total_borrow_count,
      </if>
      <if test="totalLendCount != null">
        total_lend_count,
      </if>
      <if test="overdueingCount != null">
        overdueing_count,
      </if>
      <if test="borrowingCount != null">
        borrowing_count,
      </if>
      <if test="lendingCount != null">
        lending_count,
      </if>
      <if test="totalOverdueAmount != null">
        total_overdue_amount,
      </if>
      <if test="totalBorrowAmount != null">
        total_borrow_amount,
      </if>
      <if test="totalLendAmount != null">
        total_lend_amount,
      </if>
      <if test="overdueingAmount != null">
        overdueing_amount,
      </if>
      <if test="borrowingAmount != null">
        borrowing_amount,
      </if>
      <if test="lendingAmount != null">
        lending_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="normalRepayCount != null">
        #{normalRepayCount,jdbcType=INTEGER},
      </if>
      <if test="totalOverdueCount != null">
        #{totalOverdueCount,jdbcType=INTEGER},
      </if>
      <if test="totalBorrowCount != null">
        #{totalBorrowCount,jdbcType=INTEGER},
      </if>
      <if test="totalLendCount != null">
        #{totalLendCount,jdbcType=INTEGER},
      </if>
      <if test="overdueingCount != null">
        #{overdueingCount,jdbcType=INTEGER},
      </if>
      <if test="borrowingCount != null">
        #{borrowingCount,jdbcType=INTEGER},
      </if>
      <if test="lendingCount != null">
        #{lendingCount,jdbcType=INTEGER},
      </if>
      <if test="totalOverdueAmount != null">
        #{totalOverdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalBorrowAmount != null">
        #{totalBorrowAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalLendAmount != null">
        #{totalLendAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueingAmount != null">
        #{overdueingAmount,jdbcType=DECIMAL},
      </if>
      <if test="borrowingAmount != null">
        #{borrowingAmount,jdbcType=DECIMAL},
      </if>
      <if test="lendingAmount != null">
        #{lendingAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.sltstatistic.model.firenze.IouUserLoanExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from iou_user_loan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou_user_loan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.normalRepayCount != null">
        normal_repay_count = #{record.normalRepayCount,jdbcType=INTEGER},
      </if>
      <if test="record.totalOverdueCount != null">
        total_overdue_count = #{record.totalOverdueCount,jdbcType=INTEGER},
      </if>
      <if test="record.totalBorrowCount != null">
        total_borrow_count = #{record.totalBorrowCount,jdbcType=INTEGER},
      </if>
      <if test="record.totalLendCount != null">
        total_lend_count = #{record.totalLendCount,jdbcType=INTEGER},
      </if>
      <if test="record.overdueingCount != null">
        overdueing_count = #{record.overdueingCount,jdbcType=INTEGER},
      </if>
      <if test="record.borrowingCount != null">
        borrowing_count = #{record.borrowingCount,jdbcType=INTEGER},
      </if>
      <if test="record.lendingCount != null">
        lending_count = #{record.lendingCount,jdbcType=INTEGER},
      </if>
      <if test="record.totalOverdueAmount != null">
        total_overdue_amount = #{record.totalOverdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalBorrowAmount != null">
        total_borrow_amount = #{record.totalBorrowAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalLendAmount != null">
        total_lend_amount = #{record.totalLendAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueingAmount != null">
        overdueing_amount = #{record.overdueingAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.borrowingAmount != null">
        borrowing_amount = #{record.borrowingAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.lendingAmount != null">
        lending_amount = #{record.lendingAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou_user_loan
    set id = #{record.id,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=CHAR},
      normal_repay_count = #{record.normalRepayCount,jdbcType=INTEGER},
      total_overdue_count = #{record.totalOverdueCount,jdbcType=INTEGER},
      total_borrow_count = #{record.totalBorrowCount,jdbcType=INTEGER},
      total_lend_count = #{record.totalLendCount,jdbcType=INTEGER},
      overdueing_count = #{record.overdueingCount,jdbcType=INTEGER},
      borrowing_count = #{record.borrowingCount,jdbcType=INTEGER},
      lending_count = #{record.lendingCount,jdbcType=INTEGER},
      total_overdue_amount = #{record.totalOverdueAmount,jdbcType=DECIMAL},
      total_borrow_amount = #{record.totalBorrowAmount,jdbcType=DECIMAL},
      total_lend_amount = #{record.totalLendAmount,jdbcType=DECIMAL},
      overdueing_amount = #{record.overdueingAmount,jdbcType=DECIMAL},
      borrowing_amount = #{record.borrowingAmount,jdbcType=DECIMAL},
      lending_amount = #{record.lendingAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.sltstatistic.model.firenze.IouUserLoan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou_user_loan
    <set>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="normalRepayCount != null">
        normal_repay_count = #{normalRepayCount,jdbcType=INTEGER},
      </if>
      <if test="totalOverdueCount != null">
        total_overdue_count = #{totalOverdueCount,jdbcType=INTEGER},
      </if>
      <if test="totalBorrowCount != null">
        total_borrow_count = #{totalBorrowCount,jdbcType=INTEGER},
      </if>
      <if test="totalLendCount != null">
        total_lend_count = #{totalLendCount,jdbcType=INTEGER},
      </if>
      <if test="overdueingCount != null">
        overdueing_count = #{overdueingCount,jdbcType=INTEGER},
      </if>
      <if test="borrowingCount != null">
        borrowing_count = #{borrowingCount,jdbcType=INTEGER},
      </if>
      <if test="lendingCount != null">
        lending_count = #{lendingCount,jdbcType=INTEGER},
      </if>
      <if test="totalOverdueAmount != null">
        total_overdue_amount = #{totalOverdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalBorrowAmount != null">
        total_borrow_amount = #{totalBorrowAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalLendAmount != null">
        total_lend_amount = #{totalLendAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueingAmount != null">
        overdueing_amount = #{overdueingAmount,jdbcType=DECIMAL},
      </if>
      <if test="borrowingAmount != null">
        borrowing_amount = #{borrowingAmount,jdbcType=DECIMAL},
      </if>
      <if test="lendingAmount != null">
        lending_amount = #{lendingAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.sltstatistic.model.firenze.IouUserLoan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update iou_user_loan
    set ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=CHAR},
      normal_repay_count = #{normalRepayCount,jdbcType=INTEGER},
      total_overdue_count = #{totalOverdueCount,jdbcType=INTEGER},
      total_borrow_count = #{totalBorrowCount,jdbcType=INTEGER},
      total_lend_count = #{totalLendCount,jdbcType=INTEGER},
      overdueing_count = #{overdueingCount,jdbcType=INTEGER},
      borrowing_count = #{borrowingCount,jdbcType=INTEGER},
      lending_count = #{lendingCount,jdbcType=INTEGER},
      total_overdue_amount = #{totalOverdueAmount,jdbcType=DECIMAL},
      total_borrow_amount = #{totalBorrowAmount,jdbcType=DECIMAL},
      total_lend_amount = #{totalLendAmount,jdbcType=DECIMAL},
      overdueing_amount = #{overdueingAmount,jdbcType=DECIMAL},
      borrowing_amount = #{borrowingAmount,jdbcType=DECIMAL},
      lending_amount = #{lendingAmount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>